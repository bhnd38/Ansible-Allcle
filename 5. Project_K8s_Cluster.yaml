---
- hosts: k8s_cluster:children
  become: yes
  tasks:
    - name: Update the system
      dnf:
        name: '*'
        state: latest

    - name: Add Docker repository
      command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    - name: Install Docker and Containerd
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Start and enable Containerd service
      systemd:
        name: containerd
        state: started
        enabled: yes

    - name: Disable SELinux
      shell: |
        setenforce 0
        sed -i 's/^SELINUX=enforcing$/SELINUX=disabled/' /etc/selinux/config

    - name: Disable swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Disable firewall
      systemd:
        name: firewalld
        state: stopped
        enabled: no

    - name: Load kernel modules for Kubernetes
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Enable bridge netfilter
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1

    - name: Create default containerd config
      command: containerd config default | tee /etc/containerd/config.toml

    - name: Set Systemd as cgroup driver for containerd
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^SystemdCgroup = false'
        line: 'SystemdCgroup = true'

    - name: Reload sysctl
      command: sysctl --system

    - name: Add Kubernetes repository
      copy:
        dest: /etc/yum.repos.d/kubernetes.repo
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
          exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni

    - name: Install Kubernetes packages
      dnf:
        name:
          - kubeadm
          - kubectl
          - kubelet
        state: present
        disable_excludes: kubernetes

---
- hosts: master
  become: yes
  tasks:
    - name: Extract VIP from keepalived.conf
      shell: "grep -oP '(?<=virtual_ipaddress {)[^}]+' /etc/keepalived/keepalived.conf | awk '{print $1}'"
      register: vip_output

    - name: Set virtual_ip variable
      set_fact:
        virtual_ip: "{{ vip_output.stdout | regex_replace('/.*','') }}"

    - name: Initialize Kubernetes master node
      shell: "kubeadm init --control-plane-endpoint={{ virtual_ip }}:6443 --pod-network-cidr=192.168.0.0/16"
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Set up kubeconfig for root
      shell: "mkdir -p $HOME/.kube && cp /etc/kubernetes/admin.conf $HOME/.kube/config && chown $(id -u):$(id -g) $HOME/.kube/config"

    - name: Install Calico network plugin
      shell: |
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/tigera-operator.yaml
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/custom-resources.yaml
        sleep 20
      args:
        warn: false

    - name: Retrieve Kubernetes join token and command
      shell: "kubeadm token create --print-join-command"
      register: join_command

    - name: Extract token and hash from join command
      set_fact:
        kubeadm_token: "{{ join_command.stdout | regex_search('--token\\s(\\S+)') }}"
        kubeadm_hash: "{{ join_command.stdout | regex_search('--discovery-token-ca-cert-hash\\s(\\S+)') }}"

---
- hosts: worker
  become: yes
  tasks:
    - name: Join worker node to the Kubernetes cluster
      shell: "kubeadm join {{ virtual_ip }}:6443 --token {{ kubeadm_token }} --discovery-token-ca-cert-hash {{ kubeadm_hash }}"
